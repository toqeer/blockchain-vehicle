/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 

namespace org.vda
import composer.base.User
import composer.base.Manufacturer
import composer.base.Ministory

concept VehicleDetails {
  o String make
  o String modelType
  o String colour
  o String numberPlate optional
  o String modelVersion optional
  o String bodyType optional
  o String typeOfFuel optional
  o Integer numberOfSeats optional
  o Double maxNetPower optional // kW
  o String engineNumber optional
  //--> PrivateOwner privateOwner
}



concept TransferDetails {
  --> User seller
  --> User buyer
  --> Vehicle vehicle
  o TransferStatus transferStatus
}

enum VehicleStatus {
  o ACTIVE
  o IN_ACTIVE
  o SCRAPPED
}

enum TransferFlag {
  o ACTIVE
  o NOT_ACTIVE
}


enum TransferStatus {
  o SELLER_INITIATED
  o BUYER_ACCEPTED
  o MINISTORY_APPROVED
}

asset Vehicle identified by vIn {
  o String vIn
  o VehicleDetails vehicleDetails
  o VehicleStatus vehicleStatus default='ACTIVE'
  o TransferFlag transferFlag default='NOT_ACTIVE'
  o TransferDetails transferDetails optional
  --> User owner optional
  //o VehicleTransfer[] logEntries optional
}


transaction VehicleRegister {
  o Vehicle vehicle
}

abstract transaction VehicleTransaction  {
  --> Vehicle vehicle
}

transaction VehicleTransfer extends VehicleTransaction {
  --> User seller
  --> User buyer
  o String specialNotes optional
}

transaction VehicleTransferCancel extends VehicleTransaction {
  --> User seller optional
}

transaction VehicleTransferUpdateStatus extends VehicleTransaction {
  --> User seller optional
  --> User buyer optional
  --> Ministory ministory optional
  o TransferStatus transferStatus optional 
}



transaction ScrapVehicle extends VehicleTransaction {
  o String message optional
}

